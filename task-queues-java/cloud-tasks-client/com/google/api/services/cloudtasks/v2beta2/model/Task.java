/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-08 11:51:56 PST)
 * on 2017-02-08 at 19:52:26 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.cloudtasks.v2beta2.model;

/**
 * A unit of scheduled work.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tasks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Task extends com.google.api.client.json.GenericJson {

  /**
   * App Engine task target. Can be used only if Queue.app_engine_target is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppEngineTaskTarget appEngineTaskTarget;

  /**
   * Output only.
   *
   * The time that the task was created.
   *
   * create_time will be truncated to the nearest second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required.
   *
   * The task name. For example: `projects//locations//queues//tasks/`
   *
   * * `` must match `[a-zA-Z\\d-:\\.]+` * `` must match `[a-zA-Z\\d-]+` * `` must match
   * `[a-zA-Z\\d_-]+`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Pull task target. Can be used only if Queue.pull_target is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PullTaskTarget pullTaskTarget;

  /**
   * The time when the task is scheduled to be attempted.
   *
   * For pull queues, this is the time when the task is available to be leased; if a task is
   * currently leased, this is the time when the current lease expires, that is, the time that the
   * task was leased plus the PullTasksRequest.lease_duration.
   *
   * For App Engine queues, this is when the task will be attempted or retried.
   *
   * schedule_time will be truncated to the nearest microsecond.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String scheduleTime;

  /**
   * Output only.
   *
   * Task status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TaskStatus taskStatus;

  /**
   * Output only.
   *
   * The view specifies which subset of the Task has been returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String view;

  /**
   * App Engine task target. Can be used only if Queue.app_engine_target is set.
   * @return value or {@code null} for none
   */
  public AppEngineTaskTarget getAppEngineTaskTarget() {
    return appEngineTaskTarget;
  }

  /**
   * App Engine task target. Can be used only if Queue.app_engine_target is set.
   * @param appEngineTaskTarget appEngineTaskTarget or {@code null} for none
   */
  public Task setAppEngineTaskTarget(AppEngineTaskTarget appEngineTaskTarget) {
    this.appEngineTaskTarget = appEngineTaskTarget;
    return this;
  }

  /**
   * Output only.
   *
   * The time that the task was created.
   *
   * create_time will be truncated to the nearest second.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only.
   *
   * The time that the task was created.
   *
   * create_time will be truncated to the nearest second.
   * @param createTime createTime or {@code null} for none
   */
  public Task setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required.
   *
   * The task name. For example: `projects//locations//queues//tasks/`
   *
   * * `` must match `[a-zA-Z\\d-:\\.]+` * `` must match `[a-zA-Z\\d-]+` * `` must match
   * `[a-zA-Z\\d_-]+`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required.
   *
   * The task name. For example: `projects//locations//queues//tasks/`
   *
   * * `` must match `[a-zA-Z\\d-:\\.]+` * `` must match `[a-zA-Z\\d-]+` * `` must match
   * `[a-zA-Z\\d_-]+`
   * @param name name or {@code null} for none
   */
  public Task setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Pull task target. Can be used only if Queue.pull_target is set.
   * @return value or {@code null} for none
   */
  public PullTaskTarget getPullTaskTarget() {
    return pullTaskTarget;
  }

  /**
   * Pull task target. Can be used only if Queue.pull_target is set.
   * @param pullTaskTarget pullTaskTarget or {@code null} for none
   */
  public Task setPullTaskTarget(PullTaskTarget pullTaskTarget) {
    this.pullTaskTarget = pullTaskTarget;
    return this;
  }

  /**
   * The time when the task is scheduled to be attempted.
   *
   * For pull queues, this is the time when the task is available to be leased; if a task is
   * currently leased, this is the time when the current lease expires, that is, the time that the
   * task was leased plus the PullTasksRequest.lease_duration.
   *
   * For App Engine queues, this is when the task will be attempted or retried.
   *
   * schedule_time will be truncated to the nearest microsecond.
   * @return value or {@code null} for none
   */
  public String getScheduleTime() {
    return scheduleTime;
  }

  /**
   * The time when the task is scheduled to be attempted.
   *
   * For pull queues, this is the time when the task is available to be leased; if a task is
   * currently leased, this is the time when the current lease expires, that is, the time that the
   * task was leased plus the PullTasksRequest.lease_duration.
   *
   * For App Engine queues, this is when the task will be attempted or retried.
   *
   * schedule_time will be truncated to the nearest microsecond.
   * @param scheduleTime scheduleTime or {@code null} for none
   */
  public Task setScheduleTime(String scheduleTime) {
    this.scheduleTime = scheduleTime;
    return this;
  }

  /**
   * Output only.
   *
   * Task status.
   * @return value or {@code null} for none
   */
  public TaskStatus getTaskStatus() {
    return taskStatus;
  }

  /**
   * Output only.
   *
   * Task status.
   * @param taskStatus taskStatus or {@code null} for none
   */
  public Task setTaskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

  /**
   * Output only.
   *
   * The view specifies which subset of the Task has been returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getView() {
    return view;
  }

  /**
   * Output only.
   *
   * The view specifies which subset of the Task has been returned.
   * @param view view or {@code null} for none
   */
  public Task setView(java.lang.String view) {
    this.view = view;
    return this;
  }

  @Override
  public Task set(String fieldName, Object value) {
    return (Task) super.set(fieldName, value);
  }

  @Override
  public Task clone() {
    return (Task) super.clone();
  }

}
