/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-08 11:51:56 PST)
 * on 2017-02-08 at 19:52:26 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.cloudtasks.v2beta2;

/**
 * Service definition for CloudTasks (v2beta2).
 *
 * <p>
 * Cloud Tasks enables developers to manage the execution of large numbers of distributed requests.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/cloud-tasks/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudTasksRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudTasks extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0-SNAPSHOT of the Cloud Tasks API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudtasks.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudTasks(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudTasks(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudTasks cloudtasks = new CloudTasks(...);}
   *   {@code CloudTasks.Projects.List request = cloudtasks.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudTasks cloudtasks = new CloudTasks(...);}
     *   {@code CloudTasks.Locations.List request = cloudtasks.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Queues collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudTasks cloudtasks = new CloudTasks(...);}
       *   {@code CloudTasks.Queues.List request = cloudtasks.queues().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Queues queues() {
        return new Queues();
      }

      /**
       * The "queues" collection of methods.
       */
      public class Queues {

        /**
         * Gets a queue.
         *
         * Create a request for the method "queues.get".
         *
         * This request holds the parameters needed by the cloudtasks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The resource name of the queue. For example:
        `projects//locations//queues/`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Queue> {

          private static final String REST_PATH = "v2beta2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+$");

          /**
           * Gets a queue.
           *
           * Create a request for the method "queues.get".
           *
           * This request holds the parameters needed by the the cloudtasks server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The resource name of the queue. For example:
        `projects//locations//queues/`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudTasks.this, "GET", REST_PATH, null, com.google.api.services.cloudtasks.v2beta2.model.Queue.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setBearerToken(java.lang.String bearerToken) {
            return (Get) super.setBearerToken(bearerToken);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPp(java.lang.Boolean pp) {
            return (Get) super.setPp(pp);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The resource name of the queue. For example: `projects//locations//queues/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The resource name of the queue. For example: `projects//locations//queues/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The resource name of the queue. For example: `projects//locations//queues/`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists queues and their definitions.
         *
         * Queues are returned in lexicographical order.
         *
         * Create a request for the method "queues.list".
         *
         * This request holds the parameters needed by the cloudtasks server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required.
        The location name.
        For example: `projects//locations/`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.ListQueuesResponse> {

          private static final String REST_PATH = "v2beta2/{+parent}/queues";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists queues and their definitions.
           *
           * Queues are returned in lexicographical order.
           *
           * Create a request for the method "queues.list".
           *
           * This request holds the parameters needed by the the cloudtasks server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required.
        The location name.
        For example: `projects//locations/`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudTasks.this, "GET", REST_PATH, null, com.google.api.services.cloudtasks.v2beta2.model.ListQueuesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setBearerToken(java.lang.String bearerToken) {
            return (List) super.setBearerToken(bearerToken);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPp(java.lang.Boolean pp) {
            return (List) super.setPp(pp);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The location name. For example: `projects//locations/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required.

         The location name. For example: `projects//locations/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required.
           *
           * The location name. For example: `projects//locations/`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * `filter` can be used to specify a subset of queues. Any queue field can be used as a
           * filter and several operators as supported. For example: `<=, <, >=, >, !=, =, :`. The
           * filter syntax is the same as described in
           * https://cloud.google.com/logging/docs/view/advanced_filters.
           *
           * Sample filter "pull_target: *".
           *
           * Note that using filters might cause fewer queues than the requested_page size to be
           * returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /**` filter` can be used to specify a subset of queues. Any queue field can be used as a filter and
        ` several operators as supported. For example: `<=, <, >=, >, !=, =, :`. The filter syntax is the
        ` same as described in https://cloud.google.com/logging/docs/view/advanced_filters.
        `
        ` Sample filter "pull_target: *".
        `
        ` Note that using filters might cause fewer queues than the requested_page size to be returned.
        `

           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * `filter` can be used to specify a subset of queues. Any queue field can be used as a
           * filter and several operators as supported. For example: `<=, <, >=, >, !=, =, :`. The
           * filter syntax is the same as described in
           * https://cloud.google.com/logging/docs/view/advanced_filters.
           *
           * Sample filter "pull_target: *".
           *
           * Note that using filters might cause fewer queues than the requested_page size to be
           * returned.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A token identifying the page of results to return.
           *
           * To request the first page results, page_token must be empty. To request the next page
           * of results, page_token must be the value of ListQueuesResponse.next_page_token returned
           * from the previous call to CloudTasks.ListQueues method. It is an error to switch the
           * value of ListQueuesRequest.filter while iterating through pages.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying the page of results to return.

         To request the first page results, page_token must be empty. To request the next page of results,
         page_token must be the value of ListQueuesResponse.next_page_token returned from the previous call
         to CloudTasks.ListQueues method. It is an error to switch the value of ListQueuesRequest.filter
         while iterating through pages.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A token identifying the page of results to return.
           *
           * To request the first page results, page_token must be empty. To request the next page
           * of results, page_token must be the value of ListQueuesResponse.next_page_token returned
           * from the previous call to CloudTasks.ListQueues method. It is an error to switch the
           * value of ListQueuesRequest.filter while iterating through pages.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Requested page size. Fewer queues than requested might be returned. If unspecified, at
           * most 1000 queues will be returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Fewer queues than requested might be returned. If unspecified, at most 1000
         queues will be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Fewer queues than requested might be returned. If unspecified, at
           * most 1000 queues will be returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Tasks collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudTasks cloudtasks = new CloudTasks(...);}
         *   {@code CloudTasks.Tasks.List request = cloudtasks.tasks().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Tasks tasks() {
          return new Tasks();
        }

        /**
         * The "tasks" collection of methods.
         */
        public class Tasks {

          /**
           * Acknowledges a pull task.
           *
           * The lease holder, that is, the entity that received this task in a PullTasksResponse, must call
           * this method to indicate that the work associated with the task has finished.
           *
           * The lease holder must acknowledge a task within the PullTasksRequest.lease_duration or the lease
           * will expire and the task will become ready to be returned in a different PullTasksResponse. After
           * the task is acknowledged, it will not be returned by a later CloudTasks.PullTasks,
           * CloudTasks.GetTask, or CloudTasks.ListTasks.
           *
           * Create a request for the method "tasks.acknowledge".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link Acknowledge#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
           * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.AcknowledgeTaskRequest}
           * @return the request
           */
          public Acknowledge acknowledge(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.AcknowledgeTaskRequest content) throws java.io.IOException {
            Acknowledge result = new Acknowledge(name, content);
            initialize(result);
            return result;
          }

          public class Acknowledge extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Empty> {

            private static final String REST_PATH = "v2beta2/{+name}:acknowledge";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");

            /**
             * Acknowledges a pull task.
             *
             * The lease holder, that is, the entity that received this task in a PullTasksResponse, must call
             * this method to indicate that the work associated with the task has finished.
             *
             * The lease holder must acknowledge a task within the PullTasksRequest.lease_duration or the
             * lease will expire and the task will become ready to be returned in a different
             * PullTasksResponse. After the task is acknowledged, it will not be returned by a later
             * CloudTasks.PullTasks, CloudTasks.GetTask, or CloudTasks.ListTasks.
             *
             * Create a request for the method "tasks.acknowledge".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link Acknowledge#execute()} method to invoke the remote
             * operation. <p> {@link
             * Acknowledge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
             * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.AcknowledgeTaskRequest}
             * @since 1.13
             */
            protected Acknowledge(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.AcknowledgeTaskRequest content) {
              super(CloudTasks.this, "POST", REST_PATH, content, com.google.api.services.cloudtasks.v2beta2.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
            }

            @Override
            public Acknowledge set$Xgafv(java.lang.String $Xgafv) {
              return (Acknowledge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Acknowledge setAccessToken(java.lang.String accessToken) {
              return (Acknowledge) super.setAccessToken(accessToken);
            }

            @Override
            public Acknowledge setAlt(java.lang.String alt) {
              return (Acknowledge) super.setAlt(alt);
            }

            @Override
            public Acknowledge setBearerToken(java.lang.String bearerToken) {
              return (Acknowledge) super.setBearerToken(bearerToken);
            }

            @Override
            public Acknowledge setCallback(java.lang.String callback) {
              return (Acknowledge) super.setCallback(callback);
            }

            @Override
            public Acknowledge setFields(java.lang.String fields) {
              return (Acknowledge) super.setFields(fields);
            }

            @Override
            public Acknowledge setKey(java.lang.String key) {
              return (Acknowledge) super.setKey(key);
            }

            @Override
            public Acknowledge setOauthToken(java.lang.String oauthToken) {
              return (Acknowledge) super.setOauthToken(oauthToken);
            }

            @Override
            public Acknowledge setPp(java.lang.Boolean pp) {
              return (Acknowledge) super.setPp(pp);
            }

            @Override
            public Acknowledge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Acknowledge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Acknowledge setQuotaUser(java.lang.String quotaUser) {
              return (Acknowledge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Acknowledge setUploadType(java.lang.String uploadType) {
              return (Acknowledge) super.setUploadType(uploadType);
            }

            @Override
            public Acknowledge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Acknowledge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The task name. For example: `projects//locations//queues//tasks/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            public Acknowledge setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Acknowledge set(String parameterName, Object value) {
              return (Acknowledge) super.set(parameterName, value);
            }
          }
          /**
           * Cancel a pull task's lease.
           *
           * The lease holder can use this method to cancel a task's lease by setting Task.schedule_time to
           * now. This will make the task available to be leased to the next caller of CloudTasks.PullTasks.
           *
           * Create a request for the method "tasks.cancelLease".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link CancelLease#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
           * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.CancelLeaseRequest}
           * @return the request
           */
          public CancelLease cancelLease(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.CancelLeaseRequest content) throws java.io.IOException {
            CancelLease result = new CancelLease(name, content);
            initialize(result);
            return result;
          }

          public class CancelLease extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Task> {

            private static final String REST_PATH = "v2beta2/{+name}:cancelLease";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");

            /**
             * Cancel a pull task's lease.
             *
             * The lease holder can use this method to cancel a task's lease by setting Task.schedule_time to
             * now. This will make the task available to be leased to the next caller of CloudTasks.PullTasks.
             *
             * Create a request for the method "tasks.cancelLease".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link CancelLease#execute()} method to invoke the remote
             * operation. <p> {@link
             * CancelLease#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
             * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.CancelLeaseRequest}
             * @since 1.13
             */
            protected CancelLease(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.CancelLeaseRequest content) {
              super(CloudTasks.this, "POST", REST_PATH, content, com.google.api.services.cloudtasks.v2beta2.model.Task.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
            }

            @Override
            public CancelLease set$Xgafv(java.lang.String $Xgafv) {
              return (CancelLease) super.set$Xgafv($Xgafv);
            }

            @Override
            public CancelLease setAccessToken(java.lang.String accessToken) {
              return (CancelLease) super.setAccessToken(accessToken);
            }

            @Override
            public CancelLease setAlt(java.lang.String alt) {
              return (CancelLease) super.setAlt(alt);
            }

            @Override
            public CancelLease setBearerToken(java.lang.String bearerToken) {
              return (CancelLease) super.setBearerToken(bearerToken);
            }

            @Override
            public CancelLease setCallback(java.lang.String callback) {
              return (CancelLease) super.setCallback(callback);
            }

            @Override
            public CancelLease setFields(java.lang.String fields) {
              return (CancelLease) super.setFields(fields);
            }

            @Override
            public CancelLease setKey(java.lang.String key) {
              return (CancelLease) super.setKey(key);
            }

            @Override
            public CancelLease setOauthToken(java.lang.String oauthToken) {
              return (CancelLease) super.setOauthToken(oauthToken);
            }

            @Override
            public CancelLease setPp(java.lang.Boolean pp) {
              return (CancelLease) super.setPp(pp);
            }

            @Override
            public CancelLease setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CancelLease) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CancelLease setQuotaUser(java.lang.String quotaUser) {
              return (CancelLease) super.setQuotaUser(quotaUser);
            }

            @Override
            public CancelLease setUploadType(java.lang.String uploadType) {
              return (CancelLease) super.setUploadType(uploadType);
            }

            @Override
            public CancelLease setUploadProtocol(java.lang.String uploadProtocol) {
              return (CancelLease) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The task name. For example: `projects//locations//queues//tasks/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            public CancelLease setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CancelLease set(String parameterName, Object value) {
              return (CancelLease) super.set(parameterName, value);
            }
          }
          /**
           * Creates a task and adds it to a queue.
           *
           * To add multiple tasks at the same time, use [HTTP
           * batching](https://cloud.google.com/storage/docs/json_api/v1/how-tos/batch) or the batching
           * documentation for your client library, for example https://developers.google.com/api-client-
           * library/python/guide/batch.
           *
           * Tasks cannot be updated after creation; there is no UpdateTask command.
           *
           * Create a request for the method "tasks.create".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required.
          The queue name. For example:
          `projects//locations//queues/`
          The queue must already exist.
           * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.CreateTaskRequest}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.cloudtasks.v2beta2.model.CreateTaskRequest content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Task> {

            private static final String REST_PATH = "v2beta2/{+parent}/tasks";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+$");

            /**
             * Creates a task and adds it to a queue.
             *
             * To add multiple tasks at the same time, use [HTTP
             * batching](https://cloud.google.com/storage/docs/json_api/v1/how-tos/batch) or the batching
             * documentation for your client library, for example https://developers.google.com/api-client-
             * library/python/guide/batch.
             *
             * Tasks cannot be updated after creation; there is no UpdateTask command.
             *
             * Create a request for the method "tasks.create".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required.
          The queue name. For example:
          `projects//locations//queues/`
          The queue must already exist.
             * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.CreateTaskRequest}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.cloudtasks.v2beta2.model.CreateTaskRequest content) {
              super(CloudTasks.this, "POST", REST_PATH, content, com.google.api.services.cloudtasks.v2beta2.model.Task.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setBearerToken(java.lang.String bearerToken) {
              return (Create) super.setBearerToken(bearerToken);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPp(java.lang.Boolean pp) {
              return (Create) super.setPp(pp);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/` The queue must already
             * exist.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required.

           The queue name. For example: `projects//locations//queues/` The queue must already exist.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/` The queue must already
             * exist.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a task.
           *
           * Create a request for the method "tasks.delete".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Empty> {

            private static final String REST_PATH = "v2beta2/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");

            /**
             * Deletes a task.
             *
             * Create a request for the method "tasks.delete".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudTasks.this, "DELETE", REST_PATH, null, com.google.api.services.cloudtasks.v2beta2.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setBearerToken(java.lang.String bearerToken) {
              return (Delete) super.setBearerToken(bearerToken);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPp(java.lang.Boolean pp) {
              return (Delete) super.setPp(pp);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The task name. For example: `projects//locations//queues//tasks/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a task.
           *
           * Create a request for the method "tasks.get".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Task> {

            private static final String REST_PATH = "v2beta2/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");

            /**
             * Gets a task.
             *
             * Create a request for the method "tasks.get".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudTasks.this, "GET", REST_PATH, null, com.google.api.services.cloudtasks.v2beta2.model.Task.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setBearerToken(java.lang.String bearerToken) {
              return (Get) super.setBearerToken(bearerToken);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPp(java.lang.Boolean pp) {
              return (Get) super.setPp(pp);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The task name. For example: `projects//locations//queues//tasks/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The response_view specifies which subset of the Task will be returned.
             *
             * By default response_view is Task.View.BASIC; not all information is retrieved by
             * default because some data, such as payloads, might be desirable to return only when
             * needed because of its large size or because of the sensitivity of data that it
             * contains.
             */
            @com.google.api.client.util.Key
            private java.lang.String responseView;

            /** The response_view specifies which subset of the Task will be returned.

           By default response_view is Task.View.BASIC; not all information is retrieved by default because
           some data, such as payloads, might be desirable to return only when needed because of its large
           size or because of the sensitivity of data that it contains.
             */
            public java.lang.String getResponseView() {
              return responseView;
            }

            /**
             * The response_view specifies which subset of the Task will be returned.
             *
             * By default response_view is Task.View.BASIC; not all information is retrieved by
             * default because some data, such as payloads, might be desirable to return only when
             * needed because of its large size or because of the sensitivity of data that it
             * contains.
             */
            public Get setResponseView(java.lang.String responseView) {
              this.responseView = responseView;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists the tasks in a queue.
           *
           * By default response_view is Task.View.BASIC; not all information is retrieved by default due to
           * performance considerations; ListTasksRequest.response_view controls the subset of information
           * which is returned.
           *
           * Create a request for the method "tasks.list".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required.
          The queue name. For example:
          `projects//locations//queues/`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.ListTasksResponse> {

            private static final String REST_PATH = "v2beta2/{+parent}/tasks";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+$");

            /**
             * Lists the tasks in a queue.
             *
             * By default response_view is Task.View.BASIC; not all information is retrieved by default due to
             * performance considerations; ListTasksRequest.response_view controls the subset of information
             * which is returned.
             *
             * Create a request for the method "tasks.list".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required.
          The queue name. For example:
          `projects//locations//queues/`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudTasks.this, "GET", REST_PATH, null, com.google.api.services.cloudtasks.v2beta2.model.ListTasksResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setBearerToken(java.lang.String bearerToken) {
              return (List) super.setBearerToken(bearerToken);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPp(java.lang.Boolean pp) {
              return (List) super.setPp(pp);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required.

           The queue name. For example: `projects//locations//queues/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Requested page size. Fewer tasks than requested might be returned. If unspecified,
             * 1000 tasks will be returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Requested page size. Fewer tasks than requested might be returned. If unspecified, 1000 tasks will
           be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Requested page size. Fewer tasks than requested might be returned. If unspecified,
             * 1000 tasks will be returned.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The response_view specifies which subset of the Task will be returned.
             *
             * By default response_view is Task.View.BASIC; not all information is retrieved by
             * default because some data, such as payloads, might be desirable to return only when
             * needed because of its large size or because of the sensitivity of data that it
             * contains.
             */
            @com.google.api.client.util.Key
            private java.lang.String responseView;

            /** The response_view specifies which subset of the Task will be returned.

           By default response_view is Task.View.BASIC; not all information is retrieved by default because
           some data, such as payloads, might be desirable to return only when needed because of its large
           size or because of the sensitivity of data that it contains.
             */
            public java.lang.String getResponseView() {
              return responseView;
            }

            /**
             * The response_view specifies which subset of the Task will be returned.
             *
             * By default response_view is Task.View.BASIC; not all information is retrieved by
             * default because some data, such as payloads, might be desirable to return only when
             * needed because of its large size or because of the sensitivity of data that it
             * contains.
             */
            public List setResponseView(java.lang.String responseView) {
              this.responseView = responseView;
              return this;
            }

            /**
             * Sort order used for the query. The fields supported for sorting are
             * Task.schedule_time, Task.name, and PullTaskTarget.tag. All results will be returned
             * in ascending order. The default ordering is by Task.schedule_time.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /**
           Sort order used for the query. The fields supported for sorting are Task.schedule_time, Task.name,
           and PullTaskTarget.tag. All results will be returned in ascending order. The default ordering is by
           Task.schedule_time.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Sort order used for the query. The fields supported for sorting are
             * Task.schedule_time, Task.name, and PullTaskTarget.tag. All results will be returned
             * in ascending order. The default ordering is by Task.schedule_time.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * A token identifying the page of results to return.
             *
             * To request the first page results, page_token must be empty. To request the next page
             * of results, page_token must be the value of ListTasksResponse.next_page_token
             * returned from the previous call to CloudTasks.ListTasks method.
             *
             * The page token is valid for only 2 hours.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A token identifying the page of results to return.

           To request the first page results, page_token must be empty. To request the next page of results,
           page_token must be the value of ListTasksResponse.next_page_token returned from the previous call
           to CloudTasks.ListTasks method.

           The page token is valid for only 2 hours.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A token identifying the page of results to return.
             *
             * To request the first page results, page_token must be empty. To request the next page
             * of results, page_token must be the value of ListTasksResponse.next_page_token
             * returned from the previous call to CloudTasks.ListTasks method.
             *
             * The page token is valid for only 2 hours.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Pulls tasks from a pull queue and acquires a lease on them for a specified
           * PullTasksRequest.lease_duration.
           *
           * This method is invoked by the lease holder to obtain the lease. The lease holder must acknowledge
           * the task via CloudTasks.AcknowledgeTask after they have performed the work associated with the
           * task.
           *
           * The payload is intended to store data that the lease holder needs to perform the work associated
           * with the task. To return the payloads in the PullTasksResponse, set
           * PullTasksRequest.response_view to FULL.
           *
           * Create a request for the method "tasks.pull".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link Pull#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The queue name. For example:
          `projects//locations//queues/`
           * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.PullTasksRequest}
           * @return the request
           */
          public Pull pull(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.PullTasksRequest content) throws java.io.IOException {
            Pull result = new Pull(name, content);
            initialize(result);
            return result;
          }

          public class Pull extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.PullTasksResponse> {

            private static final String REST_PATH = "v2beta2/{+name}/tasks:pull";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+$");

            /**
             * Pulls tasks from a pull queue and acquires a lease on them for a specified
             * PullTasksRequest.lease_duration.
             *
             * This method is invoked by the lease holder to obtain the lease. The lease holder must
             * acknowledge the task via CloudTasks.AcknowledgeTask after they have performed the work
             * associated with the task.
             *
             * The payload is intended to store data that the lease holder needs to perform the work
             * associated with the task. To return the payloads in the PullTasksResponse, set
             * PullTasksRequest.response_view to FULL.
             *
             * Create a request for the method "tasks.pull".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link Pull#execute()} method to invoke the remote operation. <p>
             * {@link Pull#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The queue name. For example:
          `projects//locations//queues/`
             * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.PullTasksRequest}
             * @since 1.13
             */
            protected Pull(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.PullTasksRequest content) {
              super(CloudTasks.this, "POST", REST_PATH, content, com.google.api.services.cloudtasks.v2beta2.model.PullTasksResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
            }

            @Override
            public Pull set$Xgafv(java.lang.String $Xgafv) {
              return (Pull) super.set$Xgafv($Xgafv);
            }

            @Override
            public Pull setAccessToken(java.lang.String accessToken) {
              return (Pull) super.setAccessToken(accessToken);
            }

            @Override
            public Pull setAlt(java.lang.String alt) {
              return (Pull) super.setAlt(alt);
            }

            @Override
            public Pull setBearerToken(java.lang.String bearerToken) {
              return (Pull) super.setBearerToken(bearerToken);
            }

            @Override
            public Pull setCallback(java.lang.String callback) {
              return (Pull) super.setCallback(callback);
            }

            @Override
            public Pull setFields(java.lang.String fields) {
              return (Pull) super.setFields(fields);
            }

            @Override
            public Pull setKey(java.lang.String key) {
              return (Pull) super.setKey(key);
            }

            @Override
            public Pull setOauthToken(java.lang.String oauthToken) {
              return (Pull) super.setOauthToken(oauthToken);
            }

            @Override
            public Pull setPp(java.lang.Boolean pp) {
              return (Pull) super.setPp(pp);
            }

            @Override
            public Pull setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Pull) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Pull setQuotaUser(java.lang.String quotaUser) {
              return (Pull) super.setQuotaUser(quotaUser);
            }

            @Override
            public Pull setUploadType(java.lang.String uploadType) {
              return (Pull) super.setUploadType(uploadType);
            }

            @Override
            public Pull setUploadProtocol(java.lang.String uploadProtocol) {
              return (Pull) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The queue name. For example: `projects//locations//queues/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The queue name. For example: `projects//locations//queues/`
             */
            public Pull setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Pull set(String parameterName, Object value) {
              return (Pull) super.set(parameterName, value);
            }
          }
          /**
           * Renew the current lease of a pull task.
           *
           * The lease holder can use this method to extend the lease by a new duration, starting from now.
           * The new task lease will be returned in Task.schedule_time.
           *
           * Create a request for the method "tasks.renewLease".
           *
           * This request holds the parameters needed by the cloudtasks server.  After setting any optional
           * parameters, call the {@link RenewLease#execute()} method to invoke the remote operation.
           *
           * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
           * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.RenewLeaseRequest}
           * @return the request
           */
          public RenewLease renewLease(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.RenewLeaseRequest content) throws java.io.IOException {
            RenewLease result = new RenewLease(name, content);
            initialize(result);
            return result;
          }

          public class RenewLease extends CloudTasksRequest<com.google.api.services.cloudtasks.v2beta2.model.Task> {

            private static final String REST_PATH = "v2beta2/{+name}:renewLease";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");

            /**
             * Renew the current lease of a pull task.
             *
             * The lease holder can use this method to extend the lease by a new duration, starting from now.
             * The new task lease will be returned in Task.schedule_time.
             *
             * Create a request for the method "tasks.renewLease".
             *
             * This request holds the parameters needed by the the cloudtasks server.  After setting any
             * optional parameters, call the {@link RenewLease#execute()} method to invoke the remote
             * operation. <p> {@link
             * RenewLease#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required.
          The task name. For example:
          `projects//locations//queues//tasks/`
             * @param content the {@link com.google.api.services.cloudtasks.v2beta2.model.RenewLeaseRequest}
             * @since 1.13
             */
            protected RenewLease(java.lang.String name, com.google.api.services.cloudtasks.v2beta2.model.RenewLeaseRequest content) {
              super(CloudTasks.this, "POST", REST_PATH, content, com.google.api.services.cloudtasks.v2beta2.model.Task.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
            }

            @Override
            public RenewLease set$Xgafv(java.lang.String $Xgafv) {
              return (RenewLease) super.set$Xgafv($Xgafv);
            }

            @Override
            public RenewLease setAccessToken(java.lang.String accessToken) {
              return (RenewLease) super.setAccessToken(accessToken);
            }

            @Override
            public RenewLease setAlt(java.lang.String alt) {
              return (RenewLease) super.setAlt(alt);
            }

            @Override
            public RenewLease setBearerToken(java.lang.String bearerToken) {
              return (RenewLease) super.setBearerToken(bearerToken);
            }

            @Override
            public RenewLease setCallback(java.lang.String callback) {
              return (RenewLease) super.setCallback(callback);
            }

            @Override
            public RenewLease setFields(java.lang.String fields) {
              return (RenewLease) super.setFields(fields);
            }

            @Override
            public RenewLease setKey(java.lang.String key) {
              return (RenewLease) super.setKey(key);
            }

            @Override
            public RenewLease setOauthToken(java.lang.String oauthToken) {
              return (RenewLease) super.setOauthToken(oauthToken);
            }

            @Override
            public RenewLease setPp(java.lang.Boolean pp) {
              return (RenewLease) super.setPp(pp);
            }

            @Override
            public RenewLease setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (RenewLease) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public RenewLease setQuotaUser(java.lang.String quotaUser) {
              return (RenewLease) super.setQuotaUser(quotaUser);
            }

            @Override
            public RenewLease setUploadType(java.lang.String uploadType) {
              return (RenewLease) super.setUploadType(uploadType);
            }

            @Override
            public RenewLease setUploadProtocol(java.lang.String uploadProtocol) {
              return (RenewLease) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required.

           The task name. For example: `projects//locations//queues//tasks/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required.
             *
             * The task name. For example: `projects//locations//queues//tasks/`
             */
            public RenewLease setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/queues/[^/]+/tasks/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public RenewLease set(String parameterName, Object value) {
              return (RenewLease) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link CloudTasks}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link CloudTasks}. */
    @Override
    public CloudTasks build() {
      return new CloudTasks(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudTasksRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudTasksRequestInitializer(
        CloudTasksRequestInitializer cloudtasksRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudtasksRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
